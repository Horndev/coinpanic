{"version":3,"sources":["icons8.min.js"],"names":["window","jQuery","angular","icons8Extension","injector","config","platformsMap","apiToken","publicApi","iconManager","platforms","ios8","win8","android","androidL","color","win10","Object","keys","forEach","platform","toLowerCase","alias","setDefaultIconSet","addSvgIconSet","icons","options","url","api","params","Array","isArray","join","token","cumulative","iconIdParser","id","index","String","map","param","length","hasOwnProperty","icons8Token","has","strategy","extensionBinder","extension","extensions","listeners","push","fn","console","error","listener","icons8Config","webicon","module","$webiconProvider"],"mappings":"CAAC,SAAUA,EAAQC,EAAQC,GAE3B,YAYA,SAASC,GAAgBC,EAAUC,GACjC,GAWEC,GACAC,EAXAC,EAAYJ,EAAS,aACrBK,EAAcL,EAAS,eACvBM,GACEC,MAAO,OAAQ,KAAM,KAAM,OAAQ,MACnCC,MAAO,KAAM,WAAY,YAAa,QAAS,iBAC/CC,SAAU,iBAAkB,SAAU,MACtCC,UAAW,mBAAoB,YAAa,WAAY,MACxDC,OAAQ,aAAc,IAAK,WAC3BC,OAAQ,MAAO,YAAa,cAKhCV,MACAW,OAAOC,KAAKR,GAAWS,QAAQ,SAASC,GACtCd,EAAac,EAASC,eAAiBD,EACvCV,EAAUU,GAAUD,QAAQ,SAASG,GACnChB,EAAagB,GAASF,MAI1BX,EACGc,kBAAkB,UAClBC,cACC,SACA,SAASC,GACP,GACEC,IACEC,IAAKtB,EAAOuB,IAAID,IAChBE,UAYJ,OATIJ,KACGK,MAAMC,QAAQN,KACjBA,GAASA,IAEXC,EAAQG,OAAOJ,MAAQA,EAAMO,KAAK,MAEhCzB,IACFmB,EAAQG,OAAOI,MAAQ1B,GAElBmB,IAGPQ,YAAY,EACZC,aAAc,SAASC,EAAIP,GACzB,GACEQ,EAQF,KAPAD,EAAKE,OAAOF,GAAM,IACbN,MAAMC,QAAQF,KACjBA,MAEFA,EAASA,EAAOU,IAAI,SAASC,GAC3B,MAAOF,QAAOE,GAAOnB,gBAElBgB,EAAQ,EAAGA,EAAQR,EAAOY,OAAQJ,IACrC,GAAI/B,EAAaoC,eAAeb,EAAOQ,IACrC,OAAQ/B,EAAauB,EAAOQ,IAASD,GAAIJ,KAAK,IAIlD,QAAQ1B,EAAgB,EAAG8B,GAAIJ,KAAK,QAK5CxB,EAAUmC,YAAc,SAASV,GAC/B1B,EAAW0B,GAGT7B,EAASwC,IAAI,oBACfxC,EAAS,mBAAmByC,SAAS,SAASxC,GACX,mBAAtBA,GAAOsC,aAChBnC,EAAUmC,YAAYtC,EAAOsC,eA+BrC,QAASG,GAAgB1C,IAEtB2C,EAAUC,gBAAkB7B,QAAQ,SAAS4B,GAC5CA,EAAU3C,KAEZ2C,EAAUE,UAAYF,EAAUE,cAChCF,EAAUE,UAAUC,KAAK,SAASH,GAChCA,EAAU3C,KAId,QAAS2C,GAAUI,GACjB,GACEF,GACAD,CAKF,OAHAC,GAAYF,EAAUE,UAAYF,EAAUE,cAC5CD,EAAaD,EAAUC,WAAaD,EAAUC,eAE7B,kBAANG,OACTC,SAAQC,MAAM,gCAGhBL,EAAWE,KAAKC,OAChBF,GAAU9B,QAAQ,SAASmC,GACzBA,EAASH,MA7Ib,GACEI,IACE3B,KACED,IAAK,kDA4FXoB,GAAU,SAAS3C,GAEjBD,EAAgBC,EAAUmD,KAOP,mBAAVtD,IAAyBA,EAAOkD,GAAGK,SAC5CvD,EAAOkD,GAAGK,QAAQT,UAAUD,GAER,mBAAX5C,IAA0BA,EAAQuD,OAAO,YAClDvD,EAAQuD,OAAO,WAAWpD,QACxB,mBACA,SAASqD,GACPA,EAAiBX,UAAUD,OAmC9B9C,OAAQA,OAAOC,OAAQD,OAAOE","file":"icons8.min.js","sourcesContent":[";(function(window, jQuery, angular) {\n\n'use strict';\n\nvar\n  icons8Config = {\n    api: {\n      url: 'https://api.icons8.com/api/iconsets/svg-symbol'\n    }\n  };\n\n\n'use strict';\n\nfunction icons8Extension(injector, config) {\n  var\n    publicApi = injector('publicApi'),\n    iconManager = injector('iconManager'),\n    platforms = {\n      ios8: ['ios7', 'i7', 'i8', 'ios9', 'i9'],\n      win8: ['w8', 'windows8', 'windows-8', 'metro', 'windows-metro'],\n      android: ['android-kitkat', 'kitkat', 'ak'],\n      androidL: ['android-lollipop', 'android-l', 'lollipop', 'al'],\n      color: ['flat_color', 'c', 'colored'],\n      win10: ['w10', 'windows10', 'windows-10']\n    },\n    platformsMap,\n    apiToken;\n\n  platformsMap = {};\n  Object.keys(platforms).forEach(function(platform) {\n    platformsMap[platform.toLowerCase()] = platform;\n    platforms[platform].forEach(function(alias) {\n      platformsMap[alias] = platform;\n    });\n  });\n\n  iconManager\n    .setDefaultIconSet('icons8')\n    .addSvgIconSet(\n      'icons8',\n      function(icons) {\n        var\n          options = {\n            url: config.api.url,\n            params: {}\n          };\n\n        if (icons) {\n          if (!Array.isArray(icons)) {\n            icons = [icons];\n          }\n          options.params.icons = icons.join(',');\n        }\n        if (apiToken) {\n          options.params.token = apiToken;\n        }\n        return options;\n      },\n      {\n        cumulative: true,\n        iconIdParser: function(id, params) {\n          var\n            index;\n          id = String(id || '');\n          if (!Array.isArray(params)) {\n            params = [];\n          }\n          params = params.map(function(param) {\n            return String(param).toLowerCase();\n          });\n          for (index = 0; index < params.length; index++) {\n            if (platformsMap.hasOwnProperty(params[index])) {\n              return [platformsMap[params[index]], id].join('-');\n            }\n          }\n\n          return [platformsMap['c'], id].join('-');\n        }\n      }\n    );\n\n  publicApi.icons8Token = function(token) {\n    apiToken = token;\n  };\n\n  if (injector.has('configPerformer')) {\n    injector('configPerformer').strategy(function(config) {\n      if (typeof config.icons8Token != 'undefined') {\n        publicApi.icons8Token(config.icons8Token);\n      }\n    });\n  }\n\n}\n\n\n'use strict';\n\nextension(function(injector) {\n\n  icons8Extension(injector, icons8Config);\n\n});\n\n\n'use strict';\n\nif (typeof jQuery != 'undefined' && jQuery.fn.webicon) {\n  jQuery.fn.webicon.extension(extensionBinder);\n}\nif (typeof angular != 'undefined' && angular.module('webicon')) {\n  angular.module('webicon').config([\n    '$webiconProvider',\n    function($webiconProvider) {\n      $webiconProvider.extension(extensionBinder)\n    }\n  ])\n}\n\nfunction extensionBinder(injector) {\n\n  (extension.extensions || []).forEach(function(extension) {\n    extension(injector);\n  });\n  extension.listeners = extension.listeners || [];\n  extension.listeners.push(function(extension) {\n    extension(injector);\n  });\n}\n\nfunction extension(fn) {\n  var\n    listeners,\n    extensions;\n\n  listeners = extension.listeners = extension.listeners || [];\n  extensions = extension.extensions = extension.extensions || [];\n\n  if (typeof fn != 'function') {\n    console.error('Extension is not a function');\n    return;\n  }\n  extensions.push(fn);\n  listeners.forEach(function(listener) {\n    listener(fn);\n  });\n}\n\n\n})(window, window.jQuery, window.angular);"],"sourceRoot":"/source/"}