{"version":3,"sources":["fontawesome.min.js"],"names":["window","jQuery","angular","extensionBinder","injector","extension","extensions","forEach","listeners","push","fn","console","error","listener","iconManager","addFontIconSet","name","params","classBuilder","Array","prototype","apply","map","param","join","webicon","module","config","$webiconProvider"],"mappings":"CAAC,SAAUA,EAAQC,EAAQC,GAE3B,YA0CA,SAASC,GAAgBC,IAEtBC,EAAUC,gBAAkBC,QAAQ,SAASF,GAC5CA,EAAUD,KAEZC,EAAUG,UAAYH,EAAUG,cAChCH,EAAUG,UAAUC,KAAK,SAASJ,GAChCA,EAAUD,KAId,QAASC,GAAUK,GACjB,GACEF,GACAF,CAKF,OAHAE,GAAYH,EAAUG,UAAYH,EAAUG,cAC5CF,EAAaD,EAAUC,WAAaD,EAAUC,eAE7B,kBAANI,OACTC,SAAQC,MAAM,gCAGhBN,EAAWG,KAAKC,OAChBF,GAAUD,QAAQ,SAASM,GACzBA,EAASH,MAjEbL,EAAU,SAASD,GACjB,GACEU,GAAcV,EAAS,cAEzBU,GACGC,eACC,KACA,SAASC,EAAMC,GACb,GACEC,IACE,KACA,MAAQF,EASZ,OAPAC,GAASA,MACTE,MAAMC,UAAUX,KAAKY,MACnBH,EACAD,EAAOK,IAAI,SAASC,GAClB,MAAO,MAAMA,KAGVL,EAAaM,KAAK,SAQZ,mBAAVvB,IAAyBA,EAAOS,GAAGe,SAC5CxB,EAAOS,GAAGe,QAAQpB,UAAUF,GAER,mBAAXD,IAA0BA,EAAQwB,OAAO,YAClDxB,EAAQwB,OAAO,WAAWC,QACxB,mBACA,SAASC,GACPA,EAAiBvB,UAAUF,OAmC9BH,OAAQA,OAAOC,OAAQD,OAAOE","file":"fontawesome.min.js","sourcesContent":[";(function(window, jQuery, angular) {\n\n'use strict';\n\nextension(function(injector) {\n  var\n    iconManager = injector('iconManager');\n\n  iconManager\n    .addFontIconSet(\n      'fa',\n      function(name, params) {\n        var\n          classBuilder = [\n            'fa',\n            'fa-' + name\n          ];\n        params = params || [];\n        Array.prototype.push.apply(\n          classBuilder,\n          params.map(function(param) {\n            return 'fa-'+param\n          })\n        );\n        return classBuilder.join(' ')\n      }\n    );\n\n});\n\n'use strict';\n\nif (typeof jQuery != 'undefined' && jQuery.fn.webicon) {\n  jQuery.fn.webicon.extension(extensionBinder);\n}\nif (typeof angular != 'undefined' && angular.module('webicon')) {\n  angular.module('webicon').config([\n    '$webiconProvider',\n    function($webiconProvider) {\n      $webiconProvider.extension(extensionBinder)\n    }\n  ])\n}\n\nfunction extensionBinder(injector) {\n\n  (extension.extensions || []).forEach(function(extension) {\n    extension(injector);\n  });\n  extension.listeners = extension.listeners || [];\n  extension.listeners.push(function(extension) {\n    extension(injector);\n  });\n}\n\nfunction extension(fn) {\n  var\n    listeners,\n    extensions;\n\n  listeners = extension.listeners = extension.listeners || [];\n  extensions = extension.extensions = extension.extensions || [];\n\n  if (typeof fn != 'function') {\n    console.error('Extension is not a function');\n    return;\n  }\n  extensions.push(fn);\n  listeners.forEach(function(listener) {\n    listener(fn);\n  });\n}\n\n\n})(window, window.jQuery, window.angular);"],"sourceRoot":"/source/"}